                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | # 
                            | # Include your name and ID here.
                            | # LiuQingyuan 516072910016
                            | # Describe how and why you modified the baseline code.
                            | # 1. Use loop unrolling, copy 8 items at a time to decrease the 
                            | # number of jump instructions.
                            | # 2. In each loop, in order to add the number of positive words
                            | # to %rax directly instead of +1 iteratively, used jumps to count 
                            | # the number.
                            | # 
                            | # ncopy length: 980 bytes
                            | # best score 55.6
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x000: 6300                 | 	xorq %rax,%rax		# count = 0;
0x002:                      | Test8:
0x002: c0f2f8ffffffffffffff | 	iaddq $-8,%rdx
0x00c: 72f702000000000000   | 	jl Test2to8
                            | 
0x015:                      | Loop8:	
0x015: 50170000000000000000 | 	mrmovq (%rdi), %rcx	# read val from src...
0x01f: 50870800000000000000 | 	mrmovq 0x8(%rdi),%r8
0x029: 50971000000000000000 | 	mrmovq 0x10(%rdi),%r9
0x033: 50a71800000000000000 | 	mrmovq 0x18(%rdi),%r10
0x03d: 50b72000000000000000 | 	mrmovq 0x20(%rdi),%r11
0x047: 50c72800000000000000 | 	mrmovq 0x28(%rdi),%r12
0x051: 50d73000000000000000 | 	mrmovq 0x30(%rdi),%r13
0x05b: 50e73800000000000000 | 	mrmovq 0x38(%rdi),%r14
                            | 
0x065: 40160000000000000000 | 	rmmovq %rcx,(%rsi)	# ...and store it to dst
0x06f: 40860800000000000000 | 	rmmovq %r8,0x8(%rsi)
0x079: 40961000000000000000 | 	rmmovq %r9,0x10(%rsi)
0x083: 40a61800000000000000 | 	rmmovq %r10,0x18(%rsi)
0x08d: 40b62000000000000000 | 	rmmovq %r11,0x20(%rsi)
0x097: 40c62800000000000000 | 	rmmovq %r12,0x28(%rsi)
0x0a1: 40d63000000000000000 | 	rmmovq %r13,0x30(%rsi)
0x0ab: 40e63800000000000000 | 	rmmovq %r14,0x38(%rsi)
                            | 
                            | # NopsAB means that B values in the first A values are > 0
                            | # So must have B <= A <= 8
                            | 
0x0b5:                      | Npos00:
0x0b5: 6211                 | 	andq %rcx, %rcx		# val <= 0?
0x0b7: 712001000000000000   | 	jle Npos10		# if so, goto Npos:
0x0c0:                      | Npos11:
0x0c0: 6288                 |     andq %r8,%r8
0x0c2: 712b01000000000000   |     jle Npos21
0x0cb:                      | Npos22:
0x0cb: 6299                 |     andq %r9,%r9
0x0cd: 713601000000000000   |     jle Npos32
0x0d6:                      | Npos33:
0x0d6: 62aa                 |     andq %r10,%r10
0x0d8: 714101000000000000   |     jle Npos43
0x0e1:                      | Npos44:
0x0e1: 62bb                 |     andq %r11,%r11
0x0e3: 714c01000000000000   |     jle Npos54
0x0ec:                      | Npos55:
0x0ec: 62cc                 |     andq %r12,%r12
0x0ee: 715701000000000000   |     jle Npos65
0x0f7:                      | Npos66:
0x0f7: 62dd                 |     andq %r13,%r13
0x0f9: 716201000000000000   |     jle Npos76
0x102:                      | Npos77:
0x102: 62ee                 |     andq %r14,%r14
0x104: 716d01000000000000   |     jle Npos87
0x10d:                      | Npos88:
0x10d: c0f00800000000000000 |     iaddq $8,%rax
0x117: 70d002000000000000   |     jmp Update8
                            | 
0x120:                      | Npos10:
0x120: 6288                 |     andq %r8,%r8
0x122: 718001000000000000   |     jle Npos20
0x12b:                      | Npos21:
0x12b: 6299                 |     andq %r9,%r9
0x12d: 718b01000000000000   |     jle Npos31
0x136:                      | Npos32:
0x136: 62aa                 |     andq %r10,%r10
0x138: 719601000000000000   |     jle Npos42
0x141:                      | Npos43:
0x141: 62bb                 |     andq %r11,%r11
0x143: 71a101000000000000   |     jle Npos53
0x14c:                      | Npos54:
0x14c: 62cc                 |     andq %r12,%r12
0x14e: 71ac01000000000000   |     jle Npos64
0x157:                      | Npos65:
0x157: 62dd                 |     andq %r13,%r13
0x159: 71b701000000000000   |     jle Npos75
0x162:                      | Npos76:
0x162: 62ee                 |     andq %r14,%r14
0x164: 71c201000000000000   |     jle Npos86 
0x16d:                      | Npos87:
0x16d: c0f00700000000000000 |     iaddq $7,%rax
0x177: 70d002000000000000   |     jmp Update8
                            | 
0x180:                      | Npos20:
0x180: 6299                 |     andq %r9,%r9
0x182: 71d501000000000000   |     jle Npos30
0x18b:                      | Npos31:
0x18b: 62aa                 |     andq %r10,%r10
0x18d: 71e001000000000000   |     jle Npos41
0x196:                      | Npos42:
0x196: 62bb                 |     andq %r11,%r11
0x198: 71eb01000000000000   |     jle Npos52
0x1a1:                      | Npos53:
0x1a1: 62cc                 |     andq %r12,%r12
0x1a3: 71f601000000000000   |     jle Npos63
0x1ac:                      | Npos64:
0x1ac: 62dd                 |     andq %r13,%r13
0x1ae: 710102000000000000   |     jle Npos74
0x1b7:                      | Npos75:
0x1b7: 62ee                 |     andq %r14,%r14
0x1b9: 710c02000000000000   |     jle Npos85
0x1c2:                      | Npos86:
0x1c2: c0f00600000000000000 |     iaddq $6,%rax
0x1cc: 70d002000000000000   |     jmp Update8
                            | 
0x1d5:                      | Npos30:
0x1d5: 62aa                 |     andq %r10,%r10
0x1d7: 711f02000000000000   |     jle Npos40
0x1e0:                      | Npos41:
0x1e0: 62bb                 |     andq %r11,%r11
0x1e2: 712a02000000000000   |     jle Npos51
0x1eb:                      | Npos52:
0x1eb: 62cc                 |     andq %r12,%r12
0x1ed: 713502000000000000   |     jle Npos62
0x1f6:                      | Npos63:
0x1f6: 62dd                 |     andq %r13,%r13
0x1f8: 714002000000000000   |     jle Npos73
0x201:                      | Npos74:
0x201: 62ee                 |     andq %r14,%r14
0x203: 714b02000000000000   |     jle Npos84
0x20c:                      | Npos85:
0x20c: c0f00500000000000000 |     iaddq $5,%rax
0x216: 70d002000000000000   |     jmp Update8
                            | 
0x21f:                      | Npos40:
0x21f: 62bb                 |     andq %r11,%r11
0x221: 715e02000000000000   |     jle Npos50
0x22a:                      | Npos51:
0x22a: 62cc                 |     andq %r12,%r12
0x22c: 716902000000000000   |     jle Npos61
0x235:                      | Npos62:
0x235: 62dd                 |     andq %r13,%r13
0x237: 717402000000000000   |     jle Npos72
0x240:                      | Npos73:
0x240: 62ee                 |     andq %r14,%r14
0x242: 717f02000000000000   |     jle Npos83
0x24b:                      | Npos84:
0x24b: c0f00400000000000000 |     iaddq $4,%rax
0x255: 70d002000000000000   |     jmp Update8
                            | 
0x25e:                      | Npos50:
0x25e: 62cc                 |     andq %r12,%r12
0x260: 719202000000000000   |     jle Npos60
0x269:                      | Npos61:
0x269: 62dd                 |     andq %r13,%r13
0x26b: 719d02000000000000   |     jle Npos71
0x274:                      | Npos72:
0x274: 62ee                 |     andq %r14,%r14
0x276: 71a802000000000000   |     jle Npos82
0x27f:                      | Npos83:
0x27f: c0f00300000000000000 |     iaddq $3,%rax
0x289: 70d002000000000000   |     jmp Update8
                            | 
0x292:                      | Npos60:
0x292: 62dd                 |     andq %r13,%r13
0x294: 71bb02000000000000   |     jle Npos70
0x29d:                      | Npos71:
0x29d: 62ee                 |     andq %r14,%r14
0x29f: 71c602000000000000   |     jle Npos81
0x2a8:                      | Npos82:
0x2a8: c0f00200000000000000 |     iaddq $2,%rax
0x2b2: 70d002000000000000   |     jmp Update8
                            | 
0x2bb:                      | Npos70:
0x2bb: 62ee                 |     andq %r14,%r14
0x2bd: 71d002000000000000   |     jle Update8
0x2c6:                      | Npos81:
0x2c6: c0f00100000000000000 |     iaddq $1,%rax
                            | 
0x2d0:                      | Update8:
0x2d0: c0f74000000000000000 | 	iaddq $0x40, %rdi		# src++
0x2da: c0f64000000000000000 | 	iaddq $0x40, %rsi		# dst++
0x2e4: c0f2f8ffffffffffffff |     iaddq $-8,%rdx
0x2ee: 761500000000000000   | 	jg Loop8			# if so, goto Loop:
                            | 
                            | 
0x2f7:                      | Test2to8: # 2 <= len < 8
0x2f7: c0f20600000000000000 | 	iaddq $6,%rdx # bug here
0x301: 729703000000000000   | 	jl Lastone
                            | 
0x30a:                      | Loop2to8:
0x30a: 50170000000000000000 | 	mrmovq (%rdi), %rcx	# read val from src...
0x314: 50870800000000000000 | 	mrmovq 0x8(%rdi),%r8
                            | 
0x31e: 40160000000000000000 | 	rmmovq %rcx, (%rsi)	# ...and store it to dst
0x328: 40860800000000000000 | 	rmmovq %r8,0x8(%rsi)
                            | 
0x332:                      | Nposs00:
0x332: 6211                 | 	andq %rcx, %rcx		# val <= 0?
0x334: 715b03000000000000   | 	jle Nposs10
0x33d:                      | Nposs11:
0x33d: 6288                 |     andq %r8,%r8
0x33f: 716603000000000000   |     jle Nposs21
0x348:                      | Nposs22:
0x348: c0f00200000000000000 |     iaddq $2,%rax
0x352: 707003000000000000   |     jmp Update2to8
                            | 
0x35b:                      | Nposs10:
0x35b: 6288                 |     andq %r8,%r8
0x35d: 717003000000000000   |     jle Update2to8
0x366:                      | Nposs21:
0x366: c0f00100000000000000 |     iaddq $1,%rax
                            | 
0x370:                      | Update2to8:
0x370: c0f71000000000000000 | 	iaddq $0x10,%rdi
0x37a: c0f61000000000000000 | 	iaddq $0x10,%rsi
0x384: c0f2feffffffffffffff | 	iaddq $-2,%rdx
0x38e: 750a03000000000000   | 	jge Loop2to8
                            | 
0x397:                      | Lastone:
0x397: c0f20100000000000000 | 	iaddq $1,%rdx
0x3a1: 72d303000000000000   | 	jl Done
0x3aa: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x3b4: 62aa                 | 	andq %r10,%r10
0x3b6: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x3c0: 71d303000000000000   | 	jle Done
0x3c9: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3d3:                      | Done:
0x3d3: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3d4:                      | End:
                            | #/* $end ncopy-ys */
